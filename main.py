import telebot

bot = telebot.TeleBot('7691146935:AAETEjwWIxON4LdPn0jCLzEYVIJj9CkGTb0')

# –°–ª–æ–≤–∞—Ä—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
questions = {
    1: {
        'question': "–ß–µ–º —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤ –±—É–¥—É—â–µ–º?",
        'answers': ["–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫"],
        'next': {
            "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫": 2,
            "–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫": 3
        }
    },
    2: {
        'question': "–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–±–µ –±–ª–∏–∂–µ?",
        'answers': ["Python", "C#"],
        'next': {
            "Python": "specialization_python",
            "C#": "specialization_csharp"
        }
    },
    3: {
        'question': "–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –≤–∞–∂–Ω–µ–µ: —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞?",
        'answers': ["–°–∫–æ—Ä–æ—Å—Ç—å", "–ö–∞—á–µ—Å—Ç–≤–æ"],
        'next': {
            "–°–∫–æ—Ä–æ—Å—Ç—å": "specialization_fast",
            "–ö–∞—á–µ—Å—Ç–≤–æ": "specialization_quality"
        }
    },
    # –î–æ–±–∞–≤—å—Ç–µ –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

@bot.message_handler(commands=['start'])
def start(message):
    bot_username = "@RuskaGo_bot"
    help_link = f'tg://resolve?domain={bot_username}&start=help'
    first_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    last_name = message.from_user.last_name or ""

    if last_name:
        mess = f'–ü—Ä–∏–≤–µ—Ç, <b>{first_name} <u>{last_name}</u></b>! –í–≤–µ–¥–∏ <b><a href="{help_link}">/help</a></b>!'
    else:
        mess = f'–ü—Ä–∏–≤–µ—Ç, <b>{first_name}</b>! –í–≤–µ–¥–∏ <b><a href="{help_link}">/help</a></b>!'
    
    bot.send_message(message.chat.id, mess, parse_mode='html')

@bot.message_handler(commands=['site'])
def site(message):
    bot.send_message(message.chat.id, 'üîó <a href="https://www.youtube.com/watch?v=HodO2eBEz_8&t=2004s">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ</a>', parse_mode='html')

@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n1. /start - –ù–∞—á–∞—Ç—å\n2. /site - –°–∞–π—Ç \n 3. /help - –ü–æ–º–æ—â—å \n 4. /start_survey - –Ω–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", parse_mode='html')

@bot.message_handler(commands=['start_survey'])
def start_survey(message):
    user_states[message.chat.id] = {'current_question': 1}  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    ask_question(message)

@bot.message_handler(func=lambda message: message.text in ['–î–∞', '–ù–µ—Ç'])
def survey_response(message):
    if message.text == '–î–∞':
        bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ä–æ—Å.")
        user_states[message.chat.id] = {'current_question': 1}  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        ask_question(message)
    else:
        bot.send_message(message.chat.id, "–ñ–∞–ª—å, –Ω–æ —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –ø–æ–∑–∂–µ!")

def ask_question(message):
    user_id = message.chat.id
    current_question = user_states[user_id]['current_question']
    question_data = questions.get(current_question)

    if question_data:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å
        question = question_data['question']
        answers = question_data['answers']

        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        for answer in answers:
            keyboard.add(telebot.types.KeyboardButton(answer))

        bot.send_message(message.chat.id, question, reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text in ['–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', '–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫', 'Python', 'C#', '–°–∫–æ—Ä–æ—Å—Ç—å', '–ö–∞—á–µ—Å—Ç–≤–æ'])
def handle_answer(message):
    user_id = message.chat.id
    answer = message.text

    current_question = user_states[user_id]['current_question']
    question_data = questions.get(current_question)

    if question_data:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
        next_question = question_data['next'].get(answer)
        if isinstance(next_question, int):
            user_states[user_id]['current_question'] = next_question
            ask_question(message)
        else:
            # –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            handle_specialization(message, next_question)

def handle_specialization(message, specialization):
    if specialization == "specialization_python":
        bot.send_message(message.chat.id, "–¢—ã —Ö–æ—Ä–æ—à–æ –ø–æ–¥–æ–π–¥–µ—à—å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å Python, –∏–∑—É—á–∏ Flask –∏–ª–∏ Django!")
    elif specialization == "specialization_csharp":
        bot.send_message(message.chat.id, "–¢—ã –º–æ–∂–µ—à—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ C# –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Unity –¥–ª—è –∏–≥—Ä!")
    elif specialization == "specialization_fast":
        bot.send_message(message.chat.id, "–î–ª—è —Ç–µ–±—è –ø–æ–¥–æ–π–¥–µ—Ç —Ä–∞–±–æ—Ç–∞ –≤ —Å—Ç–∞—Ä—Ç–∞–ø–∞—Ö —Å –±—ã—Å—Ç—Ä—ã–º —Ü–∏–∫–ª–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!")
    elif specialization == "specialization_quality":
        bot.send_message(message.chat.id, "–¢—ã –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥–æ–π–¥–µ—à—å –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö, –≥–¥–µ –≤–∞–∂–Ω–∞ –≤—ã—Å–æ–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")

@bot.message_handler()
def none_command(message):
    bot_username = "@RuskaGo_bot"
    help_link = f'tg://resolve?domain={bot_username}&start=help'
    
    mess = f'<b>{message.from_user.first_name}</b>! –Ø –Ω–µ —É–º–µ—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥–∏ <b><a href="{help_link}">/help</a></b>!'
    bot.send_message(message.chat.id, mess, parse_mode='html')

bot.polling(none_stop=True)
